"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildWithPlugin = void 0;
const architect_1 = require("@angular-devkit/architect");
const browser_esbuild_1 = require("@angular-devkit/build-angular/src/builders/browser-esbuild");
const core_1 = require("@dotenv-run/core");
const esbuild_1 = require("@dotenv-run/esbuild");
const path_1 = require("path");
const rxjs_1 = require("rxjs");
const esbuild_index_html_1 = require("../utils/esbuild-index-html");
const get_environment_1 = require("../utils/get-environment");
const project_1 = require("../utils/project");
const buildWithPlugin = (options, context) => {
    const dotEnvOptions = options.ngxEnv;
    return (0, rxjs_1.from)((0, project_1.getProjectCwd)(context)).pipe((0, rxjs_1.switchMap)((cwd) => {
        const { full, raw } = (0, core_1.env)(Object.assign(Object.assign({}, dotEnvOptions), { cwd, global: "_NGX_ENV_", environment: (0, get_environment_1.getEnvironment)(context.target.configuration) }));
        return (0, architect_1.fromAsyncIterable)((0, browser_esbuild_1.buildEsbuildBrowser)(options, context, undefined, [
            (0, esbuild_1.dotenvRunDefine)(full),
        ])).pipe((0, rxjs_1.tap)(() => {
            (0, esbuild_index_html_1.indexHtml)((0, path_1.join)(context.workspaceRoot, options.outputPath.toString()), Array.isArray(options.localize) ? options.localize : [], raw, false, // no ssr support with browser-esbuild,
            dotEnvOptions.runtime);
        }));
    }));
};
exports.buildWithPlugin = buildWithPlugin;
exports.default = (0, architect_1.createBuilder)(exports.buildWithPlugin);
