var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { env } from "@dotenv-run/core";
function definePluginBuild(build, env) {
    var _a;
    var define = (_a = build.initialOptions.define) !== null && _a !== void 0 ? _a : {};
    build.initialOptions.define = __assign(__assign({}, env), define);
}
var dotenvRun = function (options) {
    return {
        name: "dotenv-run",
        setup: function (build) {
            var full = env(options).full;
            definePluginBuild(build, full);
        },
    };
};
var dotenvRunDefine = function (env) {
    return {
        name: "dotenv-run-define",
        setup: function (build) {
            definePluginBuild(build, env);
        },
    };
};
export { dotenvRun, dotenvRunDefine };
export default dotenvRun;
//# sourceMappingURL=index.js.map